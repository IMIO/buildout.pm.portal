version: '3.4'
volumes:
  delib-postgres:
services:
  instance:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./data/blobstorage:/data/blobstorage
      - ./zodbconvert.cfg:/plone/zodbconvert.cfg
    environment:
      - ENV=dev
      - DOMAINS=localhost
      - ZEO_HOST=zeo
      - ZEO_PORT=8100
    command: fg
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.instance.rule=Host(`portal.localhost`)"
      - "traefik.http.routers.instance.entrypoints=web"
      - "traefik.http.services.instance.loadbalancer.server.port=8081"
      - "traefik.http.routers.instance.middlewares=add-plone"
      - "traefik.http.middlewares.add-plone.addprefix.prefix=/VirtualHostBase/http/portal.localhost/conseil/VirtualHostRoot"
  postgres:
    image: postgres:14.2
    environment:
      - POSTGRES_DB=zope
      - POSTGRES_USER=zope
      - POSTGRES_PASSWORD=zope
    volumes:
      - delib-postgres:/var/lib/postgresql/data
  reverseproxy:
    image: traefik:2.0 # The official Traefik docker image
          #- "--log.level=DEBUG"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"     # The HTTP port
      - "8000:8080" # The Web UI (enabled by --api)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # So that Traefik can listen to the Docker events
